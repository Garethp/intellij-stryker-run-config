buildscript {
    repositories {
        jcenter()
        maven { url 'https://jitpack.io'}
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}


plugins {
    id 'org.jetbrains.intellij' version '1.1.4'
    id 'net.researchgate.release' version '2.6.0'
}

repositories {
    jcenter()
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'idea'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = 1.8
}

intellij {
    pluginName = 'Intellij-Stryker'
    type = 'IU'

    version = '2021.2'
    plugins = ['JavaScriptLanguage', 'NodeJS', 'terminal']

    downloadSources = true
    updateSinceUntilBuild = false
}

runIde {
    systemProperty("idea.auto.reload.plugins", true)

    /**
     * Since the intellij plugin doesn't have an easy way to refer to "latest Webstorm", we're going to go looking for
     * our latest webstorm. I've defined a list of directories to check so that you can just add your location
     * regardless of what platform you're on without having to remove other locations. That way you can commit in
     * a different location for each platform (Windows, OSX, various Linux etc.). It works in the following steps
     *
     *  1. Look through all the directories listed and make sure they exist
     *  2. Grab the webstorm installation directories from them (Matching something like 203.5981.135) and put it in a list.
     *     If the folder you specified has children called ch-0, ch-1... such as toolbox uses, it'll recursively search into those.
     *  3. If maxDesiredVersion is not null, it'll filter the list found above to remove any folders that are newer than that
     *     The max version number is an integer representing the build number (193, 203, 211...), not the product name
     *     The build number is ([two-digit-year][major release]) so 193 is 2019.3, 203 is 2020.3 and 213 is 2021.3
     *  4. Sort the list by name so that we can get the ordered versions
     *  5. Reverse the list so that the latest version is on top
     *  6. Use the first item in the list, which should be the latest version from all the directoriesToCheck
     */
    def HOME = System.properties['user.home']
    def installationsFound = []
    Integer maxDesiredVersion = 193
    def directoriesToCheck = [
            "$HOME/.local/share/JetBrains/Toolbox/apps/WebStorm/"
    ]

    directoriesToCheck.each {
        def file = new File(it)
        if (file.exists() && file.isDirectory()) {
            file.eachDirMatch(~/^[0-9.]+$/) {
                installationsFound.add(it)
            }

            file.eachDirMatch(~/ch-[0-9]+$/) {
                it.eachDirMatch(~/^[0-9.]+$/) {
                    installationsFound.add([name: it.name, fullPath: it.getPath()])
                }
            }
        }
    }

    if (maxDesiredVersion != null) {
        installationsFound = installationsFound.findAll {
            (it.name.split('\\.').first() as Integer) <= maxDesiredVersion
        }
    }

    installationsFound.sort { it.name }
    installationsFound.reverse(true)
    println(installationsFound.first().getPath())

    ideDir = installationsFound.first()

//    jvmArgs = '-Xmx2G'
}

repositories {
    jcenter()
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile group: 'junit', name: 'junit', version: '4.11'
}